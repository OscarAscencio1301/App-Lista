{"version":3,"sources":["types/types.js","actions/notasActions.js","actions/uiActions.js","components/ModalLista.js","hooks/useForm.js","components/ui/BotonAgregar.js","components/ui/Notas.js","components/ui/Entrada.js","components/Lista.js","reducers/notaReducer.js","store/store.js","reducers/uiReducer.js","AppLista.js","index.js"],"names":["types","limpiarNota","type","abrirModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","ModalLista","modalAbierto","useSelector","state","ui","notaActiva","listaNotas","dispatch","useDispatch","cerrarModalBoton","valoresIniciales","useState","valores","setvalores","cambioInput","e","target","name","value","reset","useForm","titulo","nota","importancia","useEffect","isOpen","onRequestClose","style","className","overlayClassName","onSubmit","preventDefault","trim","length","Swal","fire","title","icon","payload","editarNota","agregarNota","id","Date","now","placeholder","onChange","height","resize","BotonAgregar","onClick","Notas","scope","activarNota","borrarNota","Entrada","notas","map","Lista","reducers","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","AppLista","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.5495e7bb.chunk.js","sourcesContent":["export const types = {\r\n    // Modal\r\n    abrirModal: '[Modal] Abrir',\r\n    cerrarModal: '[Modal] Cerrar',\r\n\r\n    // Notas\r\n    notaAgregar: '[nota] Agregar',\r\n    notaBorrar: '[nota] Borrar',\r\n    notaActualizar: '[nota] Actualizar',\r\n    notaActiva: '[nota] Activa',\r\n    notaLimpieza: '[nota] Limpieza',\r\n}","import { types } from \"../types/types\";\r\n\r\nexport const activarNota = (nota) => ({\r\n    type: types.notaActiva,\r\n    payload: nota\r\n})\r\n\r\nexport const agregarNota = (nota) => ({\r\n    type: types.notaAgregar,\r\n    payload: nota\r\n})\r\n\r\nexport const limpiarNota = () => ({\r\n    type: types.notaLimpieza,\r\n\r\n})\r\n\r\nexport const editarNota = (nota) => ({\r\n    type: types.notaActualizar,\r\n    payload: nota\r\n})\r\n\r\nexport const borrarNota = (id) => ({\r\n    type: types.notaBorrar,\r\n    payload: id\r\n})","import { types } from \"../types/types\";\r\n\r\nexport const abrirModal = () => ({\r\n    type: types.abrirModal\r\n})\r\n\r\nexport const cerrarModal = () => ({\r\n    type: types.cerrarModal\r\n})","import React, { useEffect } from 'react'\r\nimport Modal from 'react-modal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { agregarNota, editarNota, limpiarNota } from '../actions/notasActions';\r\nimport { cerrarModal } from '../actions/uiActions';\r\nimport { useForm } from '../hooks/useForm';\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n  },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nexport const ModalLista = () => {\r\n    const {modalAbierto} = useSelector(state => state.ui)\r\n    const {notaActiva} = useSelector(state => state.listaNotas)\r\n    const dispatch = useDispatch()\r\n\r\n    const  cerrarModalBoton = () => {\r\n        dispatch(cerrarModal())\r\n        dispatch(limpiarNota())\r\n    }\r\n\r\n    const [valores, setvalores, cambioInput, reset] = useForm({\r\n        titulo: '',\r\n        nota: '',\r\n        importancia: ''\r\n    })\r\n    useEffect(() => {\r\n        if(notaActiva){\r\n            setvalores(notaActiva)\r\n        }else {\r\n            setvalores({\r\n                titulo: '',\r\n                nota: '',\r\n                importancia: ''\r\n            })\r\n        }\r\n        \r\n    }, [notaActiva, setvalores])\r\n\r\n    const {titulo, nota, importancia} = valores\r\n\r\n    const enviarFormulario = (e) => {\r\n        e.preventDefault();\r\n        if(titulo.trim().length < 2 ){\r\n            return Swal.fire({\r\n                title: 'Titulo Demasiado Corto',\r\n                icon: 'error'\r\n            })\r\n        }\r\n        if(nota.trim().length < 2 ){\r\n            return Swal.fire({\r\n                title: 'Nota Demasiado PequeÃ±a',\r\n                icon: 'error'\r\n            })\r\n        }\r\n        if(importancia.trim().length === 0 ){\r\n            return Swal.fire({\r\n                title: 'Selecciona el nivel de Importancia',\r\n                icon: 'error'\r\n            })\r\n        }\r\n        if(notaActiva) {\r\n            dispatch(editarNota(valores))\r\n        \r\n        }else {\r\n            dispatch(agregarNota({\r\n                ...valores,\r\n                id:Date.now()\r\n            }))\r\n        }\r\n        cerrarModalBoton();\r\n        reset();\r\n    }\r\n    return (\r\n        <>\r\n        <Modal\r\n        isOpen={modalAbierto}\r\n        onRequestClose={cerrarModalBoton}\r\n        style={customStyles}\r\n        className=\"modal\"\r\n        overlayClassName=\"modal-fondo\"\r\n      >\r\n        <h1 className=\"container\">Agregar Nota</h1>\r\n        <hr />\r\n        <form className=\"container\" onSubmit={enviarFormulario}>\r\n            <div id=\"emailHelp\" className=\"form-text\">Escribe el Titulo de la Nota</div>\r\n            <input \r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Titulo de la Nota\"\r\n                name=\"titulo\"\r\n                value={titulo}\r\n                onChange={cambioInput}\r\n            />\r\n            <hr />\r\n            <div id=\"emailHelp\" className=\"form-text\">Escribe el Texto de la Nota</div>\r\n            <textarea\r\n            className=\"form-control\"\r\n            placeholder=\"Texto de la Nota\"\r\n            name=\"nota\"\r\n            value={nota}\r\n            onChange={cambioInput}\r\n            style={{\r\n                height: '30vh',\r\n                resize: 'none'\r\n            }}\r\n            >\r\n            </textarea>\r\n            <div id=\"emailHelp\" className=\"form-text mt-3\">Nivel de Importancia</div>\r\n            <select className=\"form-select\" name=\"importancia\" value={importancia} onChange={cambioInput}>\r\n                <option value=\"\">Seleccionar</option>\r\n                <option value=\"Alta\">Alta</option>\r\n                <option value=\"Media\">Media</option>\r\n                <option value=\"Baja\">Baja</option>\r\n            </select>\r\n            <button className=\"btn btn-primary d-block w-100 mt-3\" type=\"submit\">{notaActiva ? 'Guardar Cambios' : 'Crear Nota'}</button>\r\n        </form>\r\n      </Modal>\r\n      </>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = (valoresIniciales = {}) => {\r\n   const [valores, setvalores] = useState(valoresIniciales)\r\n\r\n   const cambioInput = (e) => {\r\n       setvalores({\r\n           ...valores,\r\n           [e.target.name]: e.target.value\r\n       })\r\n   }\r\n   const reset = () => {\r\n       setvalores(valoresIniciales)\r\n   }\r\n\r\n   return [valores, setvalores, cambioInput, reset]\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { limpiarNota } from '../../actions/notasActions'\r\nimport { abrirModal } from '../../actions/uiActions'\r\n\r\nexport const BotonAgregar = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const abrirModalBoton = () => {\r\n        dispatch(limpiarNota())\r\n        dispatch(abrirModal())\r\n    }\r\n    return (\r\n       <button className=\"btn btn-primary d-block w-100\" onClick={abrirModalBoton}>Agregar Nota</button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { activarNota, borrarNota } from '../../actions/notasActions'\r\nimport { abrirModal } from '../../actions/uiActions'\r\n\r\n \r\n\r\nexport const Notas = ({id, titulo, nota, importancia}) => {\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    \r\n    const botonEditar = () => {\r\n        dispatch(activarNota({\r\n            id,\r\n            titulo,\r\n            nota,\r\n            importancia\r\n        }))\r\n        dispatch(abrirModal())\r\n\r\n    }\r\n\r\n    const botonBorrar = () => {\r\n        dispatch(borrarNota(id))\r\n\r\n    }\r\n    return (\r\n        <tr className=\"entrada\">\r\n            <th scope=\"row\">{id}</th>\r\n            <td>{titulo}</td>\r\n            <td>{nota}</td>\r\n            <td>{importancia}</td>\r\n            <td>\r\n                <button className=\"btn btn-warning mx-2\" onClick={botonEditar}>Editar</button>\r\n                <button className=\"btn btn-danger mx-2\" onClick={botonBorrar}>Borrar</button>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n","\r\nimport { useSelector } from 'react-redux'\r\nimport { Notas } from './Notas'\r\n\r\nexport const Entrada = () => {\r\n    const {notas} = useSelector(state => state.listaNotas)\r\n\r\n    return (\r\n        <>\r\n            {\r\n                notas.map(notas => <Notas key={notas.id} {...notas}/>)\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { ModalLista } from './ModalLista'\r\nimport { BotonAgregar } from './ui/BotonAgregar'\r\nimport { Entrada } from './ui/Entrada'\r\n\r\nexport const Lista = () => {\r\n\r\n    \r\n    return (\r\n        <div className=\"container-fluid mx-auto my-5\">\r\n            <h1 className=\"text-center\">Lista de Tareas</h1>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">ID</th>\r\n                        <th scope=\"col\">Titulo</th>\r\n                        <th scope=\"col\">Nota</th>\r\n                        <th scope=\"col\">Importancia</th>\r\n                        <th scope=\"col\">Acciones</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <Entrada />\r\n                    \r\n                </tbody>\r\n            </table>\r\n            <ModalLista />\r\n           <BotonAgregar />\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst valoresIniciales = {\r\n    notas: [],\r\n    notaActiva: null\r\n}\r\nexport const notaReducer = (state = valoresIniciales, action) => {\r\n    switch (action.type) {\r\n        case types.notaActiva:\r\n            return {\r\n                ...state,\r\n                notaActiva: action.payload\r\n            }\r\n        case types.notaLimpieza:\r\n            return {\r\n                ...state,\r\n                notaActiva: null\r\n            }\r\n        case types.notaAgregar:\r\n            return {\r\n                notaActiva: null,\r\n                notas: [...state.notas, action.payload]\r\n            }\r\n        case types.notaActualizar:\r\n            return {\r\n                ...state,\r\n                notas: state.notas.map(nota => nota.id === action.payload.id ? action.payload : nota)\r\n            }\r\n        case types.notaBorrar: \r\n            return {\r\n                ...state,\r\n                notas: state.notas.filter(nota => nota.id !== action.payload)\r\n            }\r\n        \r\n           \r\n    \r\n        default:\r\n            break;\r\n    }\r\n    return state\r\n\r\n}","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { notaReducer } from '../reducers/notaReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst reducers = combineReducers({\r\n    listaNotas: notaReducer,\r\n    ui: uiReducer\r\n});\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)) );\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiReducer = (state = { modalAbierto: false }, action) => {\r\n    switch (action.type) {\r\n        case types.abrirModal:\r\n            return {\r\n                ...state,\r\n                modalAbierto: true\r\n            }\r\n        case types.cerrarModal:\r\n            return {\r\n                ...state,\r\n                modalAbierto: false\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","\r\nimport { Provider } from 'react-redux'\r\nimport { Lista } from './components/Lista'\r\nimport { store } from './store/store'\r\n\r\nexport const AppLista = () => { \r\n    \r\n    return (\r\n        <Provider store={store}>\r\n            <Lista />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport { AppLista } from './AppLista';\r\nimport './styles.css'\r\n\r\n\r\nReactDOM.render(<AppLista />, document.querySelector(\"#root\"))"],"sourceRoot":""}